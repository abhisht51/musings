---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection('blog', ({ data }) => {
    return !data.draft;
  });
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<'blog'>;
};

const { post } = Astro.props;
const { Content } = await post?.render() || { Content: () => null };
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <article class="max-w-4xl mx-auto px-3 sm:px-6 lg:px-8 py-8 sm:py-12">
    <!-- Back Navigation -->
    <div class="mb-6 sm:mb-8">
      <a 
        href="/blog" 
        class="inline-flex items-center text-blue-700 dark:text-blue-300 hover:text-blue-800 dark:hover:text-blue-200 font-mono text-sm sm:text-base transition-colors"
      >
        ‚Üê Back to all posts
      </a>
    </div>

    <!-- Article Header -->
    <header class="mb-8 sm:mb-12">
      {post.data.heroImage && (
        <div class="mb-6 sm:mb-8 rounded-lg overflow-hidden">
          <img 
            src={post.data.heroImage} 
            alt={post.data.title}
            class="w-full object-contain max-h-64 sm:max-h-96"
          />
        </div>
      )}
      
      <div class="text-center">
        <h1 class="text-3xl sm:text-5xl lg:text-6xl xl:text-7xl font-bold mb-4 sm:mb-6 text-stone-800 dark:text-white leading-tight px-2">
          {post.data.title}
        </h1>
        
        <p class="text-lg sm:text-xl lg:text-2xl text-stone-600 dark:text-gray-200 mb-4 sm:mb-6 max-w-3xl mx-auto leading-relaxed px-2">
          {post.data.description}
        </p>

        <div class="flex flex-col sm:flex-row items-center justify-center gap-4 text-base text-stone-500 dark:text-gray-300">
          <div class="flex items-center">
            <span class="font-mono">By:</span>
            <a href="/author" class="ml-2 font-medium text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 transition-colors">
              {post.data.author}
            </a>
          </div>
          
          <div class="flex items-center">
            <span class="font-mono">Published:</span>
            <time class="ml-2 font-mono">
              {post.data.publishDate.toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              })}
            </time>
          </div>
          
          {post.data.updatedDate && (
            <div class="flex items-center">
              <span class="font-mono">Updated:</span>
              <time class="ml-2 font-mono">
                {post.data.updatedDate.toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </time>
            </div>
          )}
        </div>

        {post.data.tags.length > 0 && (
          <div class="flex flex-wrap justify-center gap-2 mt-6">
            {post.data.tags.map((tag) => (
              <span class="px-3 py-1 bg-blue-100 dark:bg-blue-800 text-blue-800 dark:text-blue-100 rounded-full text-base font-mono">
                {tag}
              </span>
            ))}
          </div>
        )}
      </div>
    </header>

    <!-- Article Content -->
    <div class="prose prose-xl max-w-none">
      <Content />
    </div>

    <!-- Article Footer -->
    <footer class="mt-12 pt-8 border-t border-stone-200 dark:border-gray-700">
      <div class="flex flex-col sm:flex-row items-center justify-between">
        <div class="mb-4 sm:mb-0">
          <p class="text-stone-600 dark:text-gray-200 font-mono text-base">
            Thanks for reading! üöÄ
          </p>
        </div>
        
        <div class="flex items-center space-x-4">
          <a 
            href="/blog" 
            class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors font-mono text-base"
          >
            More Posts
          </a>
          <a 
            href="/" 
            class="px-4 py-2 border border-stone-300 dark:border-gray-600 text-stone-700 dark:text-white hover:bg-stone-50 dark:hover:bg-gray-700 rounded-lg transition-colors font-mono text-base"
          >
            Home
          </a>
        </div>
      </div>
    </footer>
  </article>
</BaseLayout>

<style is:global>
  /* Base typography */
  .prose {
    font-size: 1.25rem;
    line-height: 1.8;
    font-family: 'Crimson Text', Georgia, serif;
  }

  /* Light mode styles */
  .prose p,
  .prose li,
  .prose td,
  .prose th {
    color: #44403c; /* stone-700 */
  }

  .prose h1,
  .prose h2,
  .prose h3,
  .prose h4,
  .prose h5,
  .prose h6 {
    color: #292524; /* stone-800 */
    font-family: 'Crimson Text', Georgia, serif;
    font-weight: 600;
  }

  .prose strong,
  .prose b {
    color: #292524; /* stone-800 */
    font-weight: 600;
  }

  .prose a {
    color: #1d4ed8; /* blue-700 */
    text-decoration: underline;
  }

  .prose a:hover {
    color: #1e40af; /* blue-800 */
  }

  .prose blockquote {
    color: #292524; /* stone-800 */
    border-left: 4px solid #3b82f6; /* blue-500 */
    background: #eff6ff; /* blue-50 */
    padding: 1rem 1.5rem;
    border-radius: 0.5rem;
    font-style: italic;
  }

  .prose code {
    color: #292524; /* stone-800 */
    background: #f5f5f4; /* stone-100 */
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-family: 'JetBrains Mono', 'Monaco', 'Cascadia Code', 'Roboto Mono', monospace;
    font-size: 0.9em;
  }

  .prose pre {
    background: #374151; /* gray-700 */
    color: #e5e7eb; /* gray-200 */
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
  }

  .prose pre code {
    background: transparent;
    color: inherit;
    padding: 0;
  }

  /* Dark mode styles */
  html.dark .prose p,
  html.dark .prose li,
  html.dark .prose td,
  html.dark .prose th {
    color: #e5e5e5;
  }

  html.dark .prose h1,
  html.dark .prose h2,
  html.dark .prose h3,
  html.dark .prose h4,
  html.dark .prose h5,
  html.dark .prose h6 {
    color: #ffffff;
  }

  html.dark .prose strong,
  html.dark .prose b {
    color: #ffffff;
  }

  html.dark .prose a {
    color: #93c5fd; /* blue-300 */
  }

  html.dark .prose a:hover {
    color: #dbeafe; /* blue-100 */
  }

  html.dark .prose blockquote {
    color: #ffffff;
    border-left-color: #60a5fa; /* blue-400 */
    background: rgba(59, 130, 246, 0.1); /* blue-500 with opacity */
  }

  html.dark .prose code {
    color: #ffffff;
    background: #374151; /* gray-700 */
  }

  html.dark .prose pre {
    background: #1f2937; /* gray-800 */
    color: #e5e7eb; /* gray-200 */
  }

  /* Images and other elements */
  .prose img {
    border-radius: 0.5rem;
    margin: 2rem auto;
  }

  .prose hr {
    border-color: #d6d3d1; /* stone-300 */
  }

  html.dark .prose hr {
    border-color: #525252; /* gray-600 */
  }

  /* Lists */
  .prose ul,
  .prose ol {
    color: inherit;
  }

  /* Tables */
  .prose table {
    border-collapse: collapse;
    width: 100%;
  }

  .prose th,
  .prose td {
    border: 1px solid #d6d3d1; /* stone-300 */
    padding: 0.5rem;
  }

  html.dark .prose th,
  html.dark .prose td {
    border-color: #525252; /* gray-600 */
  }
</style>